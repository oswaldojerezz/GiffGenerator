{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GiffExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","URL","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GiffExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"+MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YCNlBG,EAAc,SAAC,GAAmB,EAAlBC,GAAmB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAClC,OACI,yBAAKC,UAAU,0CACZ,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCJFK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,mGACsFC,UAAUH,IADhG,SAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHjB,GAAIiB,EAAIjB,GACRC,MAAOgB,EAAIhB,MACXC,IAAG,UAAEe,EAAIC,cAAN,aAAE,EAAYC,iBAAiBjB,QATvB,kBAaZa,GAbY,4CAAH,sDCEPK,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAAc,ECAX,SAAEA,GAAe,IAAD,EAEdrB,mBAAS,CAC/B4B,KAAK,GACLO,SAAQ,IAJ4B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAYxC,OALAC,qBAAW,WACHlB,EAAQC,GACHkB,MAAK,SAAAC,GAAI,OAAIH,EAAU,CAACT,KAAMY,EAAKL,SAAQ,SACtD,CAACd,IAEIe,EDVuBK,CAAapB,GAA/BW,EAFuB,EAE5BJ,KAAYO,EAFgB,EAEhBA,QAEnB,OACI,oCACI,wBAAIlB,UAAU,qCAAsCI,GAEnDc,GAAW,uBAAGlB,UAAU,oCAAb,WAEZ,yBAAKA,UAAU,aAEHe,EAAOF,KAAK,SAAAC,GAAG,OAAI,kBAAC,EAAD,eAAaW,IAAKX,EAAIjB,IAAQiB,UEZ1D,SAASY,IAAiB,IAAD,EAEC3C,mBAAS,CAAC,cAFX,mBAE7B4C,EAF6B,KAEhB7C,EAFgB,KAIpC,OACE,oCACE,6CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ6C,EAAWd,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACAqB,IAAKrB,EACLA,SAAYA,SCZhCwB,IAASC,OACP,kBAACH,EAAD,MACAI,SAASC,eAAe,U","file":"static/js/main.10ca5b18.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} >\r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n           <img src={url} alt={title}></img>\r\n           <p>{title}</p> \r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nexport const getGifs = async(category) => {\r\n    const URL = `https://api.giphy.com/v1/gifs/search?api_key=nTP8Teg9PgcqYpcKhiuFyDgZa5cqgYQr&limit=10&q=${ encodeURI(category) }`;\r\n    const resp = await fetch (URL);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\" >{category}</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n\r\n            <div className=\"card-grid\" >\r\n                    {\r\n                        images.map( img => <GifGridItem key={img.id} {...img}></GifGridItem> )\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect( () => { \r\n            getGifs(category)\r\n                .then(imgs => setState( {data: imgs,loading:false}))\r\n    },[category]);\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport default function GiffExpertApp() {\r\n\r\n    const [categories , setCategories] = useState(['One Punch']);\r\n\r\n    return (\r\n      <>\r\n        <h2>GiffExpertApp</h2>\r\n        <AddCategory setCategories={setCategories} ></AddCategory>\r\n        <hr></hr>\r\n\r\n        <ol>\r\n            {\r\n                categories.map( category => \r\n                    <GifGrid \r\n                    key={category}\r\n                    category = {category}\r\n                    ></GifGrid>\r\n                )\r\n            }\r\n        </ol>\r\n      </>\r\n    )\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport GiffExpertApp from './GiffExpertApp';\n\nReactDOM.render(\n  <GiffExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}